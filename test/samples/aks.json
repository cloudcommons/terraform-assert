{
    "format_version":"0.1",
    "terraform_version":"0.12.20",
    "variables":{
       "ADMIN_USER":{
          "value":"cloudcommons"
       },
       "APP":{
          "value":"cloudcommons"
       },
       "AUTO_SCALING_ENABLED":{
          "value":false
       },
       "AUTO_SCALING_MAX_COUNT":{
          "value":0
       },
       "AUTO_SCALING_MIN_COUNT":{
          "value":0
       },
       "CREATOR":{
          "value":"cloudcommons"
       },
       "ENVIRONMENT":{
          "value":"default"
       },
       "KUBERNETES_AGENT_COUNT":{
          "value":"1"
       },
       "KUBERNETES_CLIENT_ID":{
          "value":"myclientid"
       },
       "KUBERNETES_CLIENT_SECRET":{
          "value":"myclientsecret"
       },
       "KUBERNETES_CLUSTER_NAME":{
          "value":"cloudcomons-aks"
       },
       "KUBERNETES_VERSION":{
          "value":"1.15.7"
       },
       "KUBERNETES_VM_SIZE":{
          "value":"Standard_DS2_v2"
       },
       "KUBE_DASHBOARD_ENABLED":{
          "value":false
       },
       "LOCATION":{
          "value":"uksouth"
       },
       "LOG_ANALYTICS_RETENTION_DAYS":{
          "value":30
       },
       "OS_DISK_SIZE_GB":{
          "value":60
       },
       "RBAC_ENABLED":{
          "value":true
       },
       "RESOURCE_GROUP_NAME":{
          "value":"cloudcommons"
       },
       "SSH_KEY":{
          "value":"mysshkey"
       },
       "VNET_ADDRESS_SPACE":{
          "value":"172.0.0.0/22"
       },
       "VNET_CLUSTER_CIDR":{
          "value":"172.0.0.0/23"
       },
       "VNET_SERVICE_CIDR":{
          "value":"172.0.2.0/23"
       }
    },
    "planned_values":{
       "outputs":{
          "AKS_KUBE_CONFIG":{
             "sensitive":true
          },
          "AKS_KUBE_CONFIG_RAW":{
             "sensitive":true
          },
          "LOG_ANALYTICS_ID":{
             "sensitive":false
          },
          "LOG_ANALYTICS_PORTAL_URL":{
             "sensitive":false
          },
          "LOG_ANALYTICS_PRIMARY_SHARED_KEY":{
             "sensitive":true
          },
          "LOG_ANALYTICS_SECONDARY_SHARED_KEY":{
             "sensitive":true
          },
          "LOG_ANALYTICS_WORKSPACE_ID":{
             "sensitive":false
          },
          "RESOURCE_GROUP_ID":{
             "sensitive":false
          }
       },
       "root_module":{
          "resources":[
             {
                "address":"azurerm_log_analytics_workspace.cloudcommons-log",
                "mode":"managed",
                "type":"azurerm_log_analytics_workspace",
                "name":"cloudcommons-log",
                "provider_name":"azurerm",
                "schema_version":0,
                "values":{
                   "location":"uksouth",
                   "retention_in_days":30,
                   "sku":"PerGB2018",
                   "timeouts":null
                }
             },
             {
                "address":"azurerm_resource_group.cloudcommons",
                "mode":"managed",
                "type":"azurerm_resource_group",
                "name":"cloudcommons",
                "provider_name":"azurerm",
                "schema_version":0,
                "values":{
                   "location":"uksouth",
                   "timeouts":null
                }
             },
             {
                "address":"random_id.cloudcommons",
                "mode":"managed",
                "type":"random_id",
                "name":"cloudcommons",
                "provider_name":"random",
                "schema_version":0,
                "values":{
                   "byte_length":4,
                   "keepers":null,
                   "prefix":null
                }
             }
          ],
          "child_modules":[
             {
                "resources":[
                   {
                      "address":"module.cloudcomons-aks-kubernetes.azurerm_kubernetes_cluster.cloudcommons",
                      "mode":"managed",
                      "type":"azurerm_kubernetes_cluster",
                      "name":"cloudcommons",
                      "provider_name":"azurerm",
                      "schema_version":0,
                      "values":{
                         "addon_profile":[
                            {
                               "aci_connector_linux":[
 
                               ],
                               "azure_policy":[
 
                               ],
                               "http_application_routing":[
 
                               ],
                               "kube_dashboard":[
                                  {
                                     "enabled":false
                                  }
                               ],
                               "oms_agent":[
                                  {
                                     "enabled":false,
                                     "log_analytics_workspace_id":null
                                  }
                               ]
                            }
                         ],
                         "api_server_authorized_ip_ranges":null,
                         "default_node_pool":[
                            {
                               "availability_zones":null,
                               "enable_auto_scaling":false,
                               "enable_node_public_ip":false,
                               "max_count":null,
                               "max_pods":60,
                               "min_count":null,
                               "name":"default",
                               "node_count":1,
                               "node_labels":null,
                               "node_taints":null,
                               "os_disk_size_gb":60,
                               "tags":null,
                               "type":"VirtualMachineScaleSets",
                               "vm_size":"Standard_DS2_v2"
                            }
                         ],
                         "dns_prefix":"cloudcommons",
                         "enable_pod_security_policy":null,
                         "identity":[
 
                         ],
                         "kubernetes_version":"1.15.7",
                         "linux_profile":[
                            {
                               "admin_username":"cloudcommons",
                               "ssh_key":[
                                  {
                                     "key_data":"mysshkey"
                                  }
                               ]
                            }
                         ],
                         "location":"uksouth",
                         "network_profile":[
                            {
                               "dns_service_ip":"172.0.2.2",
                               "docker_bridge_cidr":"172.17.0.1/16",
                               "load_balancer_sku":"basic",
                               "network_plugin":"azure",
                               "network_policy":"calico",
                               "outbound_type":"loadBalancer",
                               "service_cidr":"172.0.2.0/23"
                            }
                         ],
                         "private_link_enabled":null,
                         "role_based_access_control":[
                            {
                               "azure_active_directory":[
 
                               ],
                               "enabled":true
                            }
                         ],
                         "service_principal":[
                            {
                               "client_id":"myclientid",
                               "client_secret":"myclientsecret"
                            }
                         ],
                         "tags":{
                            "app":"cloudcommons",
                            "creator":"cloudcommons",
                            "environment":"default"
                         },
                         "timeouts":null
                      }
                   }
                ],
                "address":"module.cloudcomons-aks-kubernetes",
                "child_modules":[
                   {
                      "resources":[
                         {
                            "address":"module.cloudcomons-aks-kubernetes.module.vnet.azurerm_network_security_group.cloudcommons[0]",
                            "mode":"managed",
                            "type":"azurerm_network_security_group",
                            "name":"cloudcommons",
                            "index":0,
                            "provider_name":"azurerm",
                            "schema_version":0,
                            "values":{
                               "location":"uksouth",
                               "tags":{
                                  "app":"",
                                  "creator":"cloudcommons",
                                  "environment":"default"
                               },
                               "timeouts":null
                            }
                         },
                         {
                            "address":"module.cloudcomons-aks-kubernetes.module.vnet.azurerm_virtual_network.cloudcommons[0]",
                            "mode":"managed",
                            "type":"azurerm_virtual_network",
                            "name":"cloudcommons",
                            "index":0,
                            "provider_name":"azurerm",
                            "schema_version":0,
                            "values":{
                               "address_space":[
                                  "172.0.0.0/22"
                               ],
                               "ddos_protection_plan":[
 
                               ],
                               "dns_servers":null,
                               "location":"uksouth",
                               "subnet":[
                                  {
                                     "address_prefix":"172.0.0.0/23",
                                     "name":"Cluster",
                                     "security_group":""
                                  }
                               ],
                               "tags":{
                                  "app":"",
                                  "creator":"cloudcommons",
                                  "environment":"default"
                               },
                               "timeouts":null
                            }
                         }
                      ],
                      "address":"module.cloudcomons-aks-kubernetes.module.vnet"
                   }
                ]
             }
          ]
       }
    },
    "resource_changes":[
       {
          "address":"azurerm_log_analytics_workspace.cloudcommons-log",
          "mode":"managed",
          "type":"azurerm_log_analytics_workspace",
          "name":"cloudcommons-log",
          "provider_name":"azurerm",
          "change":{
             "actions":[
                "create"
             ],
             "before":null,
             "after":{
                "location":"uksouth",
                "retention_in_days":30,
                "sku":"PerGB2018",
                "timeouts":null
             },
             "after_unknown":{
                "id":true,
                "name":true,
                "portal_url":true,
                "primary_shared_key":true,
                "resource_group_name":true,
                "secondary_shared_key":true,
                "tags":true,
                "workspace_id":true
             }
          }
       },
       {
          "address":"azurerm_resource_group.cloudcommons",
          "mode":"managed",
          "type":"azurerm_resource_group",
          "name":"cloudcommons",
          "provider_name":"azurerm",
          "change":{
             "actions":[
                "create"
             ],
             "before":null,
             "after":{
                "location":"uksouth",
                "timeouts":null
             },
             "after_unknown":{
                "id":true,
                "name":true,
                "tags":true
             }
          }
       },
       {
          "address":"module.cloudcomons-aks-kubernetes.azurerm_kubernetes_cluster.cloudcommons",
          "module_address":"module.cloudcomons-aks-kubernetes",
          "mode":"managed",
          "type":"azurerm_kubernetes_cluster",
          "name":"cloudcommons",
          "provider_name":"azurerm",
          "change":{
             "actions":[
                "create"
             ],
             "before":null,
             "after":{
                "addon_profile":[
                   {
                      "aci_connector_linux":[
 
                      ],
                      "azure_policy":[
 
                      ],
                      "http_application_routing":[
 
                      ],
                      "kube_dashboard":[
                         {
                            "enabled":false
                         }
                      ],
                      "oms_agent":[
                         {
                            "enabled":false,
                            "log_analytics_workspace_id":null
                         }
                      ]
                   }
                ],
                "api_server_authorized_ip_ranges":null,
                "default_node_pool":[
                   {
                      "availability_zones":null,
                      "enable_auto_scaling":false,
                      "enable_node_public_ip":false,
                      "max_count":null,
                      "max_pods":60,
                      "min_count":null,
                      "name":"default",
                      "node_count":1,
                      "node_labels":null,
                      "node_taints":null,
                      "os_disk_size_gb":60,
                      "tags":null,
                      "type":"VirtualMachineScaleSets",
                      "vm_size":"Standard_DS2_v2"
                   }
                ],
                "dns_prefix":"cloudcommons",
                "enable_pod_security_policy":null,
                "identity":[
 
                ],
                "kubernetes_version":"1.15.7",
                "linux_profile":[
                   {
                      "admin_username":"cloudcommons",
                      "ssh_key":[
                         {
                            "key_data":"mysshkey"
                         }
                      ]
                   }
                ],
                "location":"uksouth",
                "network_profile":[
                   {
                      "dns_service_ip":"172.0.2.2",
                      "docker_bridge_cidr":"172.17.0.1/16",
                      "load_balancer_sku":"basic",
                      "network_plugin":"azure",
                      "network_policy":"calico",
                      "outbound_type":"loadBalancer",
                      "service_cidr":"172.0.2.0/23"
                   }
                ],
                "private_link_enabled":null,
                "role_based_access_control":[
                   {
                      "azure_active_directory":[
 
                      ],
                      "enabled":true
                   }
                ],
                "service_principal":[
                   {
                      "client_id":"myclientid",
                      "client_secret":"myclientsecret"
                   }
                ],
                "tags":{
                   "app":"cloudcommons",
                   "creator":"cloudcommons",
                   "environment":"default"
                },
                "timeouts":null
             },
             "after_unknown":{
                "addon_profile":[
                   {
                      "aci_connector_linux":[
 
                      ],
                      "azure_policy":[
 
                      ],
                      "http_application_routing":[
 
                      ],
                      "kube_dashboard":[
                         {
 
                         }
                      ],
                      "oms_agent":[
                         {
 
                         }
                      ]
                   }
                ],
                "default_node_pool":[
                   {
                      "vnet_subnet_id":true
                   }
                ],
                "fqdn":true,
                "id":true,
                "identity":[
 
                ],
                "kube_admin_config":true,
                "kube_admin_config_raw":true,
                "kube_config":true,
                "kube_config_raw":true,
                "linux_profile":[
                   {
                      "ssh_key":[
                         {
 
                         }
                      ]
                   }
                ],
                "name":true,
                "network_profile":[
                   {
                      "load_balancer_profile":true,
                      "pod_cidr":true
                   }
                ],
                "node_resource_group":true,
                "private_fqdn":true,
                "resource_group_name":true,
                "role_based_access_control":[
                   {
                      "azure_active_directory":[
 
                      ]
                   }
                ],
                "service_principal":[
                   {
 
                   }
                ],
                "tags":{
 
                },
                "windows_profile":true
             }
          }
       },
       {
          "address":"module.cloudcomons-aks-kubernetes.module.vnet.azurerm_network_security_group.cloudcommons[0]",
          "module_address":"module.cloudcomons-aks-kubernetes.module.vnet",
          "mode":"managed",
          "type":"azurerm_network_security_group",
          "name":"cloudcommons",
          "index":0,
          "provider_name":"azurerm",
          "change":{
             "actions":[
                "create"
             ],
             "before":null,
             "after":{
                "location":"uksouth",
                "tags":{
                   "app":"",
                   "creator":"cloudcommons",
                   "environment":"default"
                },
                "timeouts":null
             },
             "after_unknown":{
                "id":true,
                "name":true,
                "resource_group_name":true,
                "security_rule":true,
                "tags":{
 
                }
             }
          }
       },
       {
          "address":"module.cloudcomons-aks-kubernetes.module.vnet.azurerm_virtual_network.cloudcommons[0]",
          "module_address":"module.cloudcomons-aks-kubernetes.module.vnet",
          "mode":"managed",
          "type":"azurerm_virtual_network",
          "name":"cloudcommons",
          "index":0,
          "provider_name":"azurerm",
          "change":{
             "actions":[
                "create"
             ],
             "before":null,
             "after":{
                "address_space":[
                   "172.0.0.0/22"
                ],
                "ddos_protection_plan":[
 
                ],
                "dns_servers":null,
                "location":"uksouth",
                "subnet":[
                   {
                      "address_prefix":"172.0.0.0/23",
                      "name":"Cluster",
                      "security_group":""
                   }
                ],
                "tags":{
                   "app":"",
                   "creator":"cloudcommons",
                   "environment":"default"
                },
                "timeouts":null
             },
             "after_unknown":{
                "address_space":[
                   false
                ],
                "ddos_protection_plan":[
 
                ],
                "id":true,
                "name":true,
                "resource_group_name":true,
                "subnet":[
                   {
                      "id":true
                   }
                ],
                "tags":{
 
                }
             }
          }
       },
       {
          "address":"random_id.cloudcommons",
          "mode":"managed",
          "type":"random_id",
          "name":"cloudcommons",
          "provider_name":"random",
          "change":{
             "actions":[
                "create"
             ],
             "before":null,
             "after":{
                "byte_length":4,
                "keepers":null,
                "prefix":null
             },
             "after_unknown":{
                "b64":true,
                "b64_std":true,
                "b64_url":true,
                "dec":true,
                "hex":true,
                "id":true
             }
          }
       }
    ],
    "output_changes":{
       "AKS_KUBE_CONFIG":{
          "actions":[
             "create"
          ],
          "before":null,
          "after_unknown":true
       },
       "AKS_KUBE_CONFIG_RAW":{
          "actions":[
             "create"
          ],
          "before":null,
          "after_unknown":true
       },
       "LOG_ANALYTICS_ID":{
          "actions":[
             "create"
          ],
          "before":null,
          "after_unknown":true
       },
       "LOG_ANALYTICS_PORTAL_URL":{
          "actions":[
             "create"
          ],
          "before":null,
          "after_unknown":true
       },
       "LOG_ANALYTICS_PRIMARY_SHARED_KEY":{
          "actions":[
             "create"
          ],
          "before":null,
          "after_unknown":true
       },
       "LOG_ANALYTICS_SECONDARY_SHARED_KEY":{
          "actions":[
             "create"
          ],
          "before":null,
          "after_unknown":true
       },
       "LOG_ANALYTICS_WORKSPACE_ID":{
          "actions":[
             "create"
          ],
          "before":null,
          "after_unknown":true
       },
       "RESOURCE_GROUP_ID":{
          "actions":[
             "create"
          ],
          "before":null,
          "after_unknown":true
       }
    },
    "configuration":{
       "provider_config":{
          "azurerm":{
             "name":"azurerm",
             "version_constraint":"~\u003e 2.0",
             "expressions":{
                "features":[
                   {
 
                   }
                ]
             }
          },
          "cloudcomons-aks-kubernetes.vnet:azurerm":{
             "name":"azurerm",
             "version_constraint":"~\u003e 2.0",
             "module_address":"cloudcomons-aks-kubernetes.vnet",
             "expressions":{
                "features":[
                   {
 
                   }
                ]
             }
          },
          "cloudcomons-aks-kubernetes:azurerm":{
             "name":"azurerm",
             "version_constraint":"~\u003e 2.0",
             "module_address":"cloudcomons-aks-kubernetes",
             "expressions":{
                "features":[
                   {
 
                   }
                ]
             }
          },
          "cloudcomons-aks-kubernetes:kubernetes":{
             "name":"kubernetes",
             "version_constraint":"~\u003e 1.11.1",
             "module_address":"cloudcomons-aks-kubernetes",
             "expressions":{
                "client_certificate":{
                   "references":[
                      "azurerm_kubernetes_cluster.cloudcommons"
                   ]
                },
                "client_key":{
                   "references":[
                      "azurerm_kubernetes_cluster.cloudcommons"
                   ]
                },
                "cluster_ca_certificate":{
                   "references":[
                      "azurerm_kubernetes_cluster.cloudcommons"
                   ]
                },
                "host":{
                   "references":[
                      "azurerm_kubernetes_cluster.cloudcommons"
                   ]
                },
                "load_config_file":{
                   "constant_value":false
                }
             }
          },
          "helm":{
             "name":"helm",
             "version_constraint":"~\u003e 1.1.0",
             "expressions":{
                "kubernetes":[
                   {
                      "client_certificate":{
                         "constant_value":"${base64decode(module.cloudcomons-aks-kubernetes.kube_config.0.client_certificate)}",
                         "references":[
                            "module.cloudcomons-aks-kubernetes.kube_config"
                         ]
                      },
                      "client_key":{
                         "constant_value":"${base64decode(module.cloudcomons-aks-kubernetes.kube_config.0.client_key)}",
                         "references":[
                            "module.cloudcomons-aks-kubernetes.kube_config"
                         ]
                      },
                      "cluster_ca_certificate":{
                         "constant_value":"${base64decode(module.cloudcomons-aks-kubernetes.kube_config.0.cluster_ca_certificate)}",
                         "references":[
                            "module.cloudcomons-aks-kubernetes.kube_config"
                         ]
                      },
                      "host":{
                         "constant_value":"${module.cloudcomons-aks-kubernetes.kube_config.0.host}",
                         "references":[
                            "module.cloudcomons-aks-kubernetes.kube_config"
                         ]
                      },
                      "load_config_file":{
                         "constant_value":false
                      }
                   }
                ]
             }
          },
          "kubernetes":{
             "name":"kubernetes",
             "version_constraint":"~\u003e 1.11.1",
             "expressions":{
                "client_certificate":{
                   "constant_value":"${base64decode(module.cloudcomons-aks-kubernetes.kube_config.0.client_certificate)}",
                   "references":[
                      "module.cloudcomons-aks-kubernetes.kube_config"
                   ]
                },
                "client_key":{
                   "constant_value":"${base64decode(module.cloudcomons-aks-kubernetes.kube_config.0.client_key)}",
                   "references":[
                      "module.cloudcomons-aks-kubernetes.kube_config"
                   ]
                },
                "cluster_ca_certificate":{
                   "constant_value":"${base64decode(module.cloudcomons-aks-kubernetes.kube_config.0.cluster_ca_certificate)}",
                   "references":[
                      "module.cloudcomons-aks-kubernetes.kube_config"
                   ]
                },
                "host":{
                   "constant_value":"${module.cloudcomons-aks-kubernetes.kube_config.0.host}",
                   "references":[
                      "module.cloudcomons-aks-kubernetes.kube_config"
                   ]
                },
                "load_config_file":{
                   "constant_value":false
                }
             }
          },
          "local":{
             "name":"local",
             "version_constraint":"~\u003e 1.4"
          },
          "null":{
             "name":"null",
             "version_constraint":"~\u003e 2.1"
          },
          "random":{
             "name":"random",
             "version_constraint":"~\u003e 2.2"
          }
       },
       "root_module":{
          "outputs":{
             "AKS_KUBE_CONFIG":{
                "sensitive":true,
                "expression":{
                   "constant_value":"${module.cloudcomons-aks-kubernetes.kube_config}",
                   "references":[
                      "module.cloudcomons-aks-kubernetes.kube_config"
                   ]
                },
                "description":"A kube_config block"
             },
             "AKS_KUBE_CONFIG_RAW":{
                "sensitive":true,
                "expression":{
                   "constant_value":"${module.cloudcomons-aks-kubernetes.kube_config_raw}",
                   "references":[
                      "module.cloudcomons-aks-kubernetes.kube_config_raw"
                   ]
                },
                "description":"Raw Kubernetes config to be used by kubectl and other compatible tools"
             },
             "LOG_ANALYTICS_ID":{
                "expression":{
                   "constant_value":"${azurerm_log_analytics_workspace.cloudcommons-log.id}",
                   "references":[
                      "azurerm_log_analytics_workspace.cloudcommons-log"
                   ]
                },
                "description":"The Log Analytics Workspace ID."
             },
             "LOG_ANALYTICS_PORTAL_URL":{
                "expression":{
                   "constant_value":"${azurerm_log_analytics_workspace.cloudcommons-log.portal_url}",
                   "references":[
                      "azurerm_log_analytics_workspace.cloudcommons-log"
                   ]
                },
                "description":"The Portal URL for the Log Analytics Workspace."
             },
             "LOG_ANALYTICS_PRIMARY_SHARED_KEY":{
                "sensitive":true,
                "expression":{
                   "constant_value":"${azurerm_log_analytics_workspace.cloudcommons-log.primary_shared_key}",
                   "references":[
                      "azurerm_log_analytics_workspace.cloudcommons-log"
                   ]
                },
                "description":"The Primary shared key for the Log Analytics Workspace."
             },
             "LOG_ANALYTICS_SECONDARY_SHARED_KEY":{
                "sensitive":true,
                "expression":{
                   "constant_value":"${azurerm_log_analytics_workspace.cloudcommons-log.secondary_shared_key}",
                   "references":[
                      "azurerm_log_analytics_workspace.cloudcommons-log"
                   ]
                },
                "description":"The Secondary shared key for the Log Analytics Workspace."
             },
             "LOG_ANALYTICS_WORKSPACE_ID":{
                "expression":{
                   "constant_value":"${azurerm_log_analytics_workspace.cloudcommons-log.workspace_id}",
                   "references":[
                      "azurerm_log_analytics_workspace.cloudcommons-log"
                   ]
                },
                "description":"The Workspace (or Customer) ID for the Log Analytics Workspace."
             },
             "RESOURCE_GROUP_ID":{
                "expression":{
                   "constant_value":"${azurerm_resource_group.cloudcommons.id}",
                   "references":[
                      "azurerm_resource_group.cloudcommons"
                   ]
                },
                "description":"The resource group ID"
             }
          },
          "resources":[
             {
                "address":"azurerm_log_analytics_workspace.cloudcommons-log",
                "mode":"managed",
                "type":"azurerm_log_analytics_workspace",
                "name":"cloudcommons-log",
                "provider_config_key":"azurerm",
                "expressions":{
                   "location":{
                      "references":[
                         "var.LOCATION"
                      ]
                   },
                   "name":{
                      "references":[
                         "var.RESOURCE_GROUP_NAME",
                         "var.ENVIRONMENT",
                         "local.uid"
                      ]
                   },
                   "resource_group_name":{
                      "references":[
                         "azurerm_resource_group.cloudcommons"
                      ]
                   },
                   "retention_in_days":{
                      "references":[
                         "var.LOG_ANALYTICS_RETENTION_DAYS"
                      ]
                   },
                   "sku":{
                      "constant_value":"PerGB2018"
                   },
                   "tags":{
                      "references":[
                         "var.APP",
                         "var.ENVIRONMENT",
                         "local.uid"
                      ]
                   }
                },
                "schema_version":0
             },
             {
                "address":"azurerm_resource_group.cloudcommons",
                "mode":"managed",
                "type":"azurerm_resource_group",
                "name":"cloudcommons",
                "provider_config_key":"azurerm",
                "expressions":{
                   "location":{
                      "references":[
                         "var.LOCATION"
                      ]
                   },
                   "name":{
                      "references":[
                         "var.RESOURCE_GROUP_NAME",
                         "var.ENVIRONMENT",
                         "local.uid"
                      ]
                   },
                   "tags":{
                      "references":[
                         "var.APP",
                         "var.ENVIRONMENT",
                         "local.uid"
                      ]
                   }
                },
                "schema_version":0
             },
             {
                "address":"random_id.cloudcommons",
                "mode":"managed",
                "type":"random_id",
                "name":"cloudcommons",
                "provider_config_key":"random",
                "expressions":{
                   "byte_length":{
                      "constant_value":4
                   }
                },
                "schema_version":0
             }
          ],
          "module_calls":{
             "cloudcomons-aks-kubernetes":{
                "source":"cloudcommons/kubernetes/azure",
                "expressions":{
                   "app":{
                      "references":[
                         "var.APP"
                      ]
                   },
                   "auto_scaling_enable":{
                      "references":[
                         "var.AUTO_SCALING_ENABLED"
                      ]
                   },
                   "auto_scaling_max_count":{
                      "references":[
                         "var.AUTO_SCALING_MAX_COUNT"
                      ]
                   },
                   "auto_scaling_min_count":{
                      "references":[
                         "var.AUTO_SCALING_MIN_COUNT"
                      ]
                   },
                   "client_id":{
                      "references":[
                         "var.KUBERNETES_CLIENT_ID"
                      ]
                   },
                   "client_secret":{
                      "references":[
                         "var.KUBERNETES_CLIENT_SECRET"
                      ]
                   },
                   "creator":{
                      "references":[
                         "var.CREATOR"
                      ]
                   },
                   "environment":{
                      "references":[
                         "var.ENVIRONMENT"
                      ]
                   },
                   "kube_dashboard_enabled":{
                      "references":[
                         "var.KUBE_DASHBOARD_ENABLED"
                      ]
                   },
                   "kubernetes_version":{
                      "references":[
                         "var.KUBERNETES_VERSION"
                      ]
                   },
                   "linux_admin_username":{
                      "references":[
                         "var.ADMIN_USER"
                      ]
                   },
                   "linux_ssh_key":{
                      "references":[
                         "var.SSH_KEY"
                      ]
                   },
                   "location":{
                      "references":[
                         "var.LOCATION"
                      ]
                   },
                   "name":{
                      "references":[
                         "local.aks_name"
                      ]
                   },
                   "node_pool_count":{
                      "references":[
                         "var.KUBERNETES_AGENT_COUNT"
                      ]
                   },
                   "node_pool_os_disk_size_gb":{
                      "references":[
                         "var.OS_DISK_SIZE_GB"
                      ]
                   },
                   "node_pool_vm_size":{
                      "references":[
                         "var.KUBERNETES_VM_SIZE"
                      ]
                   },
                   "resource_group":{
                      "references":[
                         "azurerm_resource_group.cloudcommons"
                      ]
                   },
                   "vnet_address_space":{
                      "references":[
                         "var.VNET_ADDRESS_SPACE"
                      ]
                   },
                   "vnet_ddos_enabled":{
                      "constant_value":false
                   },
                   "vnet_service_cidr":{
                      "references":[
                         "var.VNET_SERVICE_CIDR"
                      ]
                   },
                   "vnet_subnets":{
                      "references":[
                         "var.VNET_CLUSTER_CIDR"
                      ]
                   }
                },
                "module":{
                   "outputs":{
                      "fqdn":{
                         "expression":{
                            "references":[
                               "azurerm_kubernetes_cluster.cloudcommons"
                            ]
                         },
                         "description":"The FQDN of the Azure Kubernetes Managed Cluster."
                      },
                      "id":{
                         "expression":{
                            "references":[
                               "azurerm_kubernetes_cluster.cloudcommons"
                            ]
                         },
                         "description":"The Kubernetes Managed Cluster ID."
                      },
                      "kube_admin_config":{
                         "sensitive":true,
                         "expression":{
                            "references":[
                               "azurerm_kubernetes_cluster.cloudcommons"
                            ]
                         },
                         "description":"A kube_admin_config block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled."
                      },
                      "kube_admin_config_raw":{
                         "sensitive":true,
                         "expression":{
                            "references":[
                               "azurerm_kubernetes_cluster.cloudcommons"
                            ]
                         },
                         "description":"Raw Kubernetes config for the admin account to be used by kubectl and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled."
                      },
                      "kube_config":{
                         "sensitive":true,
                         "expression":{
                            "references":[
                               "azurerm_kubernetes_cluster.cloudcommons"
                            ]
                         },
                         "description":"Cluster Kubernetes Configuration object"
                      },
                      "kube_config_raw":{
                         "sensitive":true,
                         "expression":{
                            "references":[
                               "azurerm_kubernetes_cluster.cloudcommons"
                            ]
                         },
                         "description":"Cluster Kubernetes Configuration raw file"
                      },
                      "node_resource_group":{
                         "expression":{
                            "references":[
                               "azurerm_kubernetes_cluster.cloudcommons"
                            ]
                         },
                         "description":"The auto-generated Resource Group which contains the resources for this Managed Kubernetes Cluster."
                      }
                   },
                   "resources":[
                      {
                         "address":"azurerm_kubernetes_cluster.cloudcommons",
                         "mode":"managed",
                         "type":"azurerm_kubernetes_cluster",
                         "name":"cloudcommons",
                         "provider_config_key":"cloudcomons-aks-kubernetes:azurerm",
                         "expressions":{
                            "addon_profile":[
                               {
                                  "kube_dashboard":[
                                     {
                                        "enabled":{
                                           "references":[
                                              "var.kube_dashboard_enabled"
                                           ]
                                        }
                                     }
                                  ],
                                  "oms_agent":[
                                     {
                                        "enabled":{
                                           "references":[
                                              "local.oms_enabled"
                                           ]
                                        },
                                        "log_analytics_workspace_id":{
                                           "references":[
                                              "var.oms_log_analytics_workspace_id"
                                           ]
                                        }
                                     }
                                  ]
                               }
                            ],
                            "default_node_pool":[
                               {
                                  "enable_auto_scaling":{
                                     "references":[
                                        "var.auto_scaling_enable"
                                     ]
                                  },
                                  "enable_node_public_ip":{
                                     "references":[
                                        "var.node_public_ip_enable"
                                     ]
                                  },
                                  "max_count":{
                                     "references":[
                                        "var.auto_scaling_enable",
                                        "var.auto_scaling_max_count"
                                     ]
                                  },
                                  "max_pods":{
                                     "references":[
                                        "var.node_pool_max_pods"
                                     ]
                                  },
                                  "min_count":{
                                     "references":[
                                        "var.auto_scaling_enable",
                                        "var.auto_scaling_min_count"
                                     ]
                                  },
                                  "name":{
                                     "references":[
                                        "var.node_pool_name"
                                     ]
                                  },
                                  "node_count":{
                                     "references":[
                                        "var.node_pool_count"
                                     ]
                                  },
                                  "os_disk_size_gb":{
                                     "references":[
                                        "var.node_pool_os_disk_size_gb"
                                     ]
                                  },
                                  "vm_size":{
                                     "references":[
                                        "var.node_pool_vm_size"
                                     ]
                                  },
                                  "vnet_subnet_id":{
                                     "references":[
                                        "local.cluster_subnet_id"
                                     ]
                                  }
                               }
                            ],
                            "dns_prefix":{
                               "references":[
                                  "var.dns_prefix"
                               ]
                            },
                            "kubernetes_version":{
                               "references":[
                                  "var.kubernetes_version"
                               ]
                            },
                            "linux_profile":[
                               {
                                  "admin_username":{
                                     "references":[
                                        "var.linux_admin_username"
                                     ]
                                  },
                                  "ssh_key":[
                                     {
                                        "key_data":{
                                           "references":[
                                              "var.linux_ssh_key"
                                           ]
                                        }
                                     }
                                  ]
                               }
                            ],
                            "location":{
                               "references":[
                                  "var.location"
                               ]
                            },
                            "name":{
                               "references":[
                                  "var.name"
                               ]
                            },
                            "network_profile":[
                               {
                                  "dns_service_ip":{
                                     "references":[
                                        "local.dns_service_ip"
                                     ]
                                  },
                                  "docker_bridge_cidr":{
                                     "references":[
                                        "var.network_docker_bridge_cidr"
                                     ]
                                  },
                                  "load_balancer_sku":{
                                     "references":[
                                        "var.network_load_balancer_sku"
                                     ]
                                  },
                                  "network_plugin":{
                                     "references":[
                                        "var.network_plugin"
                                     ]
                                  },
                                  "network_policy":{
                                     "references":[
                                        "var.network_policy"
                                     ]
                                  },
                                  "service_cidr":{
                                     "references":[
                                        "var.vnet_service_cidr"
                                     ]
                                  }
                               }
                            ],
                            "node_resource_group":{
                               "references":[
                                  "local.node_resource_group"
                               ]
                            },
                            "resource_group_name":{
                               "references":[
                                  "var.resource_group"
                               ]
                            },
                            "role_based_access_control":[
                               {
                                  "enabled":{
                                     "references":[
                                        "var.rbac_enabled"
                                     ]
                                  }
                               }
                            ],
                            "service_principal":[
                               {
                                  "client_id":{
                                     "references":[
                                        "var.client_id"
                                     ]
                                  },
                                  "client_secret":{
                                     "references":[
                                        "var.client_secret"
                                     ]
                                  }
                               }
                            ],
                            "tags":{
                               "references":[
                                  "var.app",
                                  "var.environment",
                                  "var.creator"
                               ]
                            }
                         },
                         "schema_version":0
                      },
                      {
                         "address":"kubernetes_cluster_role_binding.admin",
                         "mode":"managed",
                         "type":"kubernetes_cluster_role_binding",
                         "name":"admin",
                         "provider_config_key":"cloudcomons-aks-kubernetes:kubernetes",
                         "expressions":{
                            "metadata":[
                               {
                                  "name":{
                                     "constant_value":"cluster-default-admin"
                                  }
                               }
                            ],
                            "role_ref":[
                               {
                                  "api_group":{
                                     "constant_value":"rbac.authorization.k8s.io"
                                  },
                                  "kind":{
                                     "constant_value":"ClusterRole"
                                  },
                                  "name":{
                                     "constant_value":"cluster-admin"
                                  }
                               }
                            ],
                            "subject":[
                               {
                                  "api_group":{
                                     "constant_value":"rbac.authorization.k8s.io"
                                  },
                                  "kind":{
                                     "constant_value":"User"
                                  },
                                  "name":{
                                     "references":[
                                        "var.rbac_aad_admin"
                                     ]
                                  }
                               }
                            ]
                         },
                         "schema_version":0,
                         "count_expression":{
                            "references":[
                               "var.rbac_aad_admin"
                            ]
                         },
                         "depends_on":[
                            "azurerm_kubernetes_cluster.cloudcommons"
                         ]
                      }
                   ],
                   "module_calls":{
                      "vnet":{
                         "source":"cloudcommons/vnet/azure",
                         "expressions":{
                            "address_space":{
                               "references":[
                                  "var.vnet_address_space"
                               ]
                            },
                            "ddos_enabled":{
                               "references":[
                                  "var.vnet_ddos_enabled"
                               ]
                            },
                            "dns_servers":{
                               "references":[
                                  "var.vnet_dns_servers"
                               ]
                            },
                            "enabled":{
                               "references":[
                                  "local.vnet_enabled"
                               ]
                            },
                            "location":{
                               "references":[
                                  "var.location"
                               ]
                            },
                            "name":{
                               "references":[
                                  "var.name"
                               ]
                            },
                            "nsg_enabled":{
                               "references":[
                                  "var.vnet_nsg_enabled"
                               ]
                            },
                            "resource_group":{
                               "references":[
                                  "var.resource_group"
                               ]
                            },
                            "subnets":{
                               "references":[
                                  "var.vnet_subnets"
                               ]
                            }
                         },
                         "module":{
                            "outputs":{
                               "id":{
                                  "expression":{
                                     "references":[
                                        "var.enabled",
                                        "azurerm_virtual_network.cloudcommons",
                                        "azurerm_virtual_network.cloudcommons[0]"
                                     ]
                                  },
                                  "description":"VNET Id"
                               },
                               "subnets":{
                                  "expression":{
                                     "references":[
                                        "var.enabled",
                                        "azurerm_virtual_network.cloudcommons",
                                        "azurerm_virtual_network.cloudcommons[0]"
                                     ]
                                  },
                                  "description":"Subnet"
                               }
                            },
                            "resources":[
                               {
                                  "address":"azurerm_network_ddos_protection_plan.cloudcommons",
                                  "mode":"managed",
                                  "type":"azurerm_network_ddos_protection_plan",
                                  "name":"cloudcommons",
                                  "provider_config_key":"vnet:azurerm",
                                  "expressions":{
                                     "location":{
                                        "references":[
                                           "var.location"
                                        ]
                                     },
                                     "name":{
                                        "references":[
                                           "var.name"
                                        ]
                                     },
                                     "resource_group_name":{
                                        "references":[
                                           "var.resource_group"
                                        ]
                                     },
                                     "tags":{
                                        "references":[
                                           "var.app",
                                           "var.environment",
                                           "var.creator"
                                        ]
                                     }
                                  },
                                  "schema_version":0,
                                  "count_expression":{
                                     "references":[
                                        "var.ddos_enabled",
                                        "var.ddos_id"
                                     ]
                                  }
                               },
                               {
                                  "address":"azurerm_network_security_group.cloudcommons",
                                  "mode":"managed",
                                  "type":"azurerm_network_security_group",
                                  "name":"cloudcommons",
                                  "provider_config_key":"vnet:azurerm",
                                  "expressions":{
                                     "location":{
                                        "references":[
                                           "var.location"
                                        ]
                                     },
                                     "name":{
                                        "references":[
                                           "var.name"
                                        ]
                                     },
                                     "resource_group_name":{
                                        "references":[
                                           "var.resource_group"
                                        ]
                                     },
                                     "tags":{
                                        "references":[
                                           "var.app",
                                           "var.environment",
                                           "var.creator"
                                        ]
                                     }
                                  },
                                  "schema_version":0,
                                  "count_expression":{
                                     "references":[
                                        "var.enabled",
                                        "var.nsg_enabled"
                                     ]
                                  }
                               },
                               {
                                  "address":"azurerm_virtual_network.cloudcommons",
                                  "mode":"managed",
                                  "type":"azurerm_virtual_network",
                                  "name":"cloudcommons",
                                  "provider_config_key":"vnet:azurerm",
                                  "expressions":{
                                     "address_space":{
                                        "references":[
                                           "var.address_space"
                                        ]
                                     },
                                     "dns_servers":{
                                        "references":[
                                           "var.dns_servers"
                                        ]
                                     },
                                     "location":{
                                        "references":[
                                           "var.location"
                                        ]
                                     },
                                     "name":{
                                        "references":[
                                           "var.name"
                                        ]
                                     },
                                     "resource_group_name":{
                                        "references":[
                                           "var.resource_group"
                                        ]
                                     },
                                     "tags":{
                                        "references":[
                                           "var.app",
                                           "var.environment",
                                           "var.creator"
                                        ]
                                     }
                                  },
                                  "schema_version":0,
                                  "count_expression":{
                                     "references":[
                                        "var.enabled"
                                     ]
                                  }
                               }
                            ],
                            "variables":{
                               "address_space":{
                                  "default":[
                                     "10.0.0.0/16"
                                  ],
                                  "description":"(Required) The address space that is used the virtual network. You can supply more than one address space. Changing this forces a new resource to be created."
                               },
                               "app":{
                                  "default":"",
                                  "description":"(Optional) Adds a tag with the application name this resource group belogs to."
                               },
                               "creator":{
                                  "default":"cloudcommons",
                                  "description":"(Optional) Adds a tag indicating the creator of this resource"
                               },
                               "ddos_enabled":{
                                  "default":false,
                                  "description":"(Optional) Adds a DDOS protection to the VNET. False by default"
                               },
                               "ddos_id":{
                                  "default":null,
                                  "description":"(Optional) Indicates the DDOS service to use. If no DDOS is specified, the module will create one."
                               },
                               "dns_servers":{
                                  "default":null,
                                  "description":"(Optional) List of DNS Servers configured in the VNET"
                               },
                               "enabled":{
                                  "default":true,
                                  "description":"(Optional) Should this VNET created? Defaults to true"
                               },
                               "environment":{
                                  "default":"default",
                                  "description":"(Optional) Environment name. If not specified, this module will use workspace as default value"
                               },
                               "location":{
                                  "description":"(Required) The location where the resource group should be created. For a list of all Azure locations, please consult this link or run az account list-locations --output table."
                               },
                               "name":{
                                  "description":"(Required) The name of the virtual network. Changing this forces a new resource to be created."
                               },
                               "nsg_enabled":{
                                  "default":false,
                                  "description":"(Optional) Adds NSG to the VNET."
                               },
                               "resource_group":{
                                  "description":"(Required) The name of the resource group in which to create the virtual network."
                               },
                               "subnets":{
                                  "default":[
 
                                  ],
                                  "description":"(Optional) Creates the given subnets in the VNET"
                               }
                            }
                         },
                         "version_constraint":"0.2.0"
                      }
                   },
                   "variables":{
                      "app":{
                         "default":"",
                         "description":"(Optional) Adds a tag with the application name this resource group belogs to."
                      },
                      "auto_scaling_enable":{
                         "default":false,
                         "description":"(Optional) Should the Kubernetes Auto Scaler be enabled for this Node Pool? Defaults to false."
                      },
                      "auto_scaling_max_count":{
                         "default":0,
                         "description":"(Optional) The maximum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 100."
                      },
                      "auto_scaling_min_count":{
                         "default":0,
                         "description":"(Optional) The minimum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 100"
                      },
                      "client_id":{
                         "description":"client_id - (Required) The Client ID for the Service Principal."
                      },
                      "client_secret":{
                         "description":"(Required) The Client Secret for the Service Principal."
                      },
                      "creator":{
                         "default":"cloudcommons",
                         "description":"(Optional) Adds a tag indicating the creator of this resource"
                      },
                      "dns_prefix":{
                         "default":"cloudcommons",
                         "description":"(Optional) DNS prefix to append to the cluster. Default: cloudcommons"
                      },
                      "environment":{
                         "default":"default",
                         "description":"(Optional) Environment name. If not specified, this module will use workspace as default value"
                      },
                      "kube_dashboard_enabled":{
                         "default":false,
                         "description":"(Optional) Is the Kubernetes Dashboard enabled?"
                      },
                      "kubernetes_version":{
                         "description":"(Required) Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). NOTE: Upgrading your cluster may take up to 10 minutes per node."
                      },
                      "linux_admin_username":{
                         "default":"cloudcommons",
                         "description":"(Optional) The Admin Username for the Cluster. Changing this forces a new resource to be created. Defaults to cloudcommons"
                      },
                      "linux_ssh_key":{
                         "description":"(Required) The Public SSH Key used to access the cluster. Changing this forces a new resource to be created."
                      },
                      "location":{
                         "description":"(Required) The location where the resource group should be created. For a list of all Azure locations, please consult this link or run az account list-locations --output table."
                      },
                      "name":{
                         "description":"(Required) The name of the Azure Kubernetes Service. Changing this forces a new resource to be created."
                      },
                      "network_docker_bridge_cidr":{
                         "default":"172.17.0.1/16",
                         "description":"(Optional) IP address (in CIDR notation) used as the Docker bridge IP address on nodes. This is required when network_plugin is set to azure. Changing this forces a new resource to be created. Defaults to 172.17.0.1/16"
                      },
                      "network_load_balancer_sku":{
                         "default":"basic",
                         "description":"(Optional) Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are basic and standard. Defaults to basic."
                      },
                      "network_plugin":{
                         "default":"azure",
                         "description":"(Optional) Network plugin to use for networking. Currently supported values are azure and kubenet. Changing this forces a new resource to be created. Defaults to azure"
                      },
                      "network_policy":{
                         "default":"calico",
                         "description":"(Optional) Sets up network policy to be used with Azure CNI. Network policy allows us to control the traffic flow between pods. This field can only be set when network_plugin is set to azure. Currently supported values are calico and azure. Changing this forces a new resource to be created. Defaults to calico"
                      },
                      "node_pool_count":{
                         "default":2,
                         "description":"(Optional) Number of pool virtual machines to create. Default: 3"
                      },
                      "node_pool_max_pods":{
                         "default":60,
                         "description":"(Optional) The maximum number of pods that can run on each agent. Changing this forces a new resource to be created."
                      },
                      "node_pool_name":{
                         "default":"default",
                         "description":"(Optional) Node Pool name. Default: default"
                      },
                      "node_pool_os_disk_size_gb":{
                         "default":60,
                         "description":"(Optional) The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created. Default: 60"
                      },
                      "node_pool_type":{
                         "default":"VirtualMachineScaleSets",
                         "description":"(Optional) The type of Node Pool which should be created. Possible values are AvailabilitySet and VirtualMachineScaleSets. Defaults to VirtualMachineScaleSets."
                      },
                      "node_pool_vm_size":{
                         "default":"Standard_DS3_v2",
                         "description":"(Optional) VM Size to create in the default node pool. Default: Standard_DS3_v2"
                      },
                      "node_public_ip_enable":{
                         "default":false,
                         "description":"(Optional) Should nodes in this Node Pool have a Public IP Address? Defaults to false."
                      },
                      "node_resource_group":{
                         "default":"",
                         "description":"(Optional) The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created. If empty, this module will generate a friendly name"
                      },
                      "oms_log_analytics_workspace_id":{
                         "default":null,
                         "description":"(Optional) The Log Analytics Workspace id when the OMS should store logs."
                      },
                      "rbac_aad":{
                         "default":false,
                         "description":"(Optional) Use Azure Active Directory as RBAC system. If not client_app_id is provided, this module will try creating an Azure Application for you"
                      },
                      "rbac_aad_admin":{
                         "default":null,
                         "description":"(Optional) Default Azure Active Directory user assigned as cluster administrator"
                      },
                      "rbac_aad_client_app_id":{
                         "default":null,
                         "description":"(Optional) The Client ID of an Azure Active Directory Application. Changing this forces a new resource to be created."
                      },
                      "rbac_aad_server_app_id":{
                         "default":null,
                         "description":"(Optional) The Server ID of an Azure Active Directory Application. Changing this forces a new resource to be created."
                      },
                      "rbac_aad_server_app_secret":{
                         "default":null,
                         "description":"(Optional) The Server Secret of an Azure Active Directory Application. Changing this forces a new resource to be created."
                      },
                      "rbac_aad_tenant_id":{
                         "default":null,
                         "description":"(Optional) The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used. Changing this forces a new resource to be created."
                      },
                      "rbac_enabled":{
                         "default":true,
                         "description":"(Required) Is Role Based Access Control Enabled? Changing this forces a new resource to be created. Defaults to true"
                      },
                      "resource_group":{
                         "description":"(Required) The name of the resource group in which to create the virtual network."
                      },
                      "vnet_address_space":{
                         "default":[
                            "172.16.0.0/18"
                         ],
                         "description":"(Optional) The address space that is used the virtual network. You can supply more than one address space. Changing this forces a new resource to be created."
                      },
                      "vnet_create":{
                         "default":true,
                         "description":"(Optional) Indicates if the module should create a VNET or use an existing one. Defaults to true"
                      },
                      "vnet_ddos_enabled":{
                         "default":false,
                         "description":"(Optional) Adds a DDOS protection to the VNET. Defaults to false"
                      },
                      "vnet_dns_servers":{
                         "default":null,
                         "description":"(Optional) List of DNS Servers configured in the VNET"
                      },
                      "vnet_nsg_enabled":{
                         "default":true,
                         "description":"(Optional) Adds NSG to the VNET."
                      },
                      "vnet_service_cidr":{
                         "default":"172.16.32.0/19",
                         "description":"(Optional) The service cidr"
                      },
                      "vnet_service_id":{
                         "default":null,
                         "description":"(Optional) If specified, uses an existing VNET instead of creating a new one"
                      },
                      "vnet_subnets":{
                         "default":[
                            {
                               "address_prefix":"172.16.0.0/19",
                               "name":"Cluster",
                               "security_group":false
                            }
                         ],
                         "description":"(Optional) Creates the given subnets in the VNET. IMPORTANT: Services subnet should be the second Subnet in this list, as the network_profile is assuming this."
                      }
                   }
                },
                "version_constraint":"0.2.3"
             }
          },
          "variables":{
             "ADMIN_USER":{
                "description":"(Required) VM admin username"
             },
             "APP":{
                "default":"cloudcommons",
                "description":"(Required) Application to which the resources belongs to"
             },
             "AUTO_SCALING_ENABLED":{
                "default":false,
                "description":"(Optional) Should the Kubernetes Auto Scaler be enabled for this Node Pool? Defaults to false."
             },
             "AUTO_SCALING_MAX_COUNT":{
                "default":0,
                "description":"(Optional) The maximum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 100. Defaults to 0."
             },
             "AUTO_SCALING_MIN_COUNT":{
                "default":0,
                "description":"(Optional) The minimum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 100. Defaults to 0."
             },
             "CREATOR":{
                "description":"(Required) Creator of this deployment"
             },
             "ENVIRONMENT":{
                "default":"default",
                "description":"(Required) Environment name. Used in most cloudcommon names. Short names without special characters are encouraged."
             },
             "KUBERNETES_AGENT_COUNT":{
                "description":"(Required) Number of Kubernetes agents required"
             },
             "KUBERNETES_CLIENT_ID":{
                "description":"(Required) Kubernetes client ID (from Azure AD Service Principal)"
             },
             "KUBERNETES_CLIENT_SECRET":{
                "description":"(Required) Kubernetes client secret (from Azure AD Service Principal)"
             },
             "KUBERNETES_CLUSTER_NAME":{
                "description":"(Required) Name of Kubernetes cluster"
             },
             "KUBERNETES_VERSION":{
                "description":"(Required) Kubernetes version to deploy"
             },
             "KUBERNETES_VM_SIZE":{
                "description":"(Required) VM size used for cluster"
             },
             "KUBE_DASHBOARD_ENABLED":{
                "default":false,
                "description":"(Optional) Is the Kubernetes Dashboard enabled?. Defaults to false"
             },
             "LOCATION":{
                "description":" (Required) The location where the resource group should be created. For a list of all Azure locations, please consult this link or run az account list-locations --output table."
             },
             "LOG_ANALYTICS_RETENTION_DAYS":{
                "default":30,
                "description":" (Optional) The workspace data retention in days. Possible values range between 30 and 730. Defaults to 30"
             },
             "OS_DISK_SIZE_GB":{
                "description":"(Required) Disk size of VMs"
             },
             "RBAC_ENABLED":{
                "default":true,
                "description":"(Optional) Enable Kubernetes Role-Based Access Control. Defaults to true"
             },
             "RESOURCE_GROUP_NAME":{
                "description":"(Required) The name of the resource group. Must be unique on your Azure subscription."
             },
             "SSH_KEY":{
                "description":"(Required) VM SSH Key"
             },
             "VNET_ADDRESS_SPACE":{
                "description":"(Required) VNET Address space"
             },
             "VNET_CLUSTER_CIDR":{
                "description":"(Required) Cluster Subnet CIDR. Should be part of the VNET_ADDRESS_SPACE vnet"
             },
             "VNET_SERVICE_CIDR":{
                "description":"(Required) Service Subnet CIDR. Should be part of the VNET_ADDRESS_SPACE vnet"
             }
          }
       }
    }
 }